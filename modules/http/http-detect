#!/usr/bin/env bash
# http-detect: echoes shell assignments for eval in parent script
# Usage (from lantern): eval "$("$MODDIR/http/http-detect" "$OUTDIR" "$IP")"
set -euo pipefail

OUTDIR="${1:?OUTDIR required as \$1}"
IP="${2:?IP required as \$2}"

ALLPORTS="$OUTDIR/report/allPorts"      # greppable nmap discovery
TARGETED_TXT="$OUTDIR/report/targeted"  # nmap -sCV normal text

# ---- collect candidate HTTP ports (service hints first) -------------------------
declare -A seen
candidates=()

# 1) Prefer service hints from targeted scan
if [[ -s "$TARGETED_TXT" ]]; then
  while IFS= read -r line; do
    # Examples:
    #   "80/tcp open  http    Apache httpd"
    #   "443/tcp open ssl/http nginx"
    #   "8080/tcp open http-proxy"
    if [[ "$line" =~ ^([0-9]{1,5})/tcp[[:space:]]+open[[:space:]].*(http|https|ssl/http) ]]; then
      p="${BASH_REMATCH[1]}"
      [[ -n "${seen[$p]:-}" ]] || { candidates+=("$p"); seen["$p"]=1; }
    fi
  done < <(grep -E '^[0-9]+/tcp[[:space:]]+open' "$TARGETED_TXT" || true)
fi

# 2) From discovery ports, filter against common HTTP-ish set
if [[ -s "$ALLPORTS" ]]; then
  COMMON_HTTP_REGEX='^(80|81|82|88|443|444|591|593|631|700|800|801|808|880|898|900|901|944|981|989|990|1311|2000|2480|3000|3001|3002|3003|3128|3333|4000|4001|4100|4200|4243|4567|4711|4712|5000|5001|5104|5108|5432|5800|5801|5802|6080|6081|7000|7001|7002|7070|7080|7088|7443|7777|7778|8000|8001|8008|8010|8011|8020|8028|8042|8060|8069|8080|8081|8082|8083|8084|8085|8086|8087|8088|8089|8090|8091|8092|8093|8099|8180|8181|8200|8243|8280|8281|8333|8443|8500|8686|8800|8880|8888|8983|9000|9001|9002|9043|9060|9080|9090|9091|9200|9443|9800|9981|12443|16080|18080|20000|28017)$'
  while IFS= read -r p; do
    [[ "$p" =~ $COMMON_HTTP_REGEX ]] || continue
    [[ -n "${seen[$p]:-}" ]] || { candidates+=("$p"); seen["$p"]=1; }
  done < <(grep -oP '\d{1,5}/open' "$ALLPORTS" | cut -d'/' -f1 | sort -n -u || true)
fi

# ---- verify with lightweight probes --------------------------------------------
verify_http() {
  local ip="$1" port="$2"
  for scheme in http https; do
    if curl -k -s -m 3 -D - "${scheme}://${ip}:${port}/" -o /dev/null 2>/dev/null \
       | head -n1 | grep -qi '^HTTP/'; then
      return 0
    fi
  done
  return 1
}

verified=()
for p in "${candidates[@]}"; do
  [[ "$p" =~ ^[0-9]+$ ]] || continue
  if verify_http "$IP" "$p"; then
    verified+=("$p")
  fi
done

# ---- emit variables for parent script ------------------------------------------
# CSV list (may be empty)
HTTP_CAND="$(IFS=, ; echo "${candidates[*]:-}")"
HTTP_VERIFIED="$(IFS=, ; echo "${verified[*]:-}")"

printf 'HTTP_CAND=%q\n'     "$HTTP_CAND"
printf 'HTTP_VERIFIED=%q\n' "$HTTP_VERIFIED"
